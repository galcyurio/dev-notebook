-----------------------서블릿에 초기화 파라미터 할당하기 ----------------------

````xml
<servlet>
	<servlet-name>regist</servlet-name>
	<servlet-class>com.restaurant.controller.RegistServlet</servlet-class>

	<init-param>
		<param-name>tempDir</param-name>
		<param-value>/temp</param-value>
	</init-param>

	<init-param>
		<param-name>dataDir</param-name>
		<param-value>/data</param-value>
	</init-param>
</servlet>

<servlet-mapping>
	<servlet-name>regist</servlet-name>
	<url-pattern>/admin/regist</url-pattern>
</servlet-mapping>
````xml

위와 같이 작성하면 RegistServlet.class 에 name-value 의 쌍으로 저장된다.

````java
public void init(ServletConfig config) throws ServletException {
	application = config.getServletContext();

	tempDir = config.getInitParameter("tempDir");
	tempPath = application.getRealPath(tempDir);

	dataDir = config.getInitParameter("dataDir");
	dataPath = application.getRealPath(dataDir);
}
````java

그리고 RegistServlet.java 에서 init 메서드의 파라미터인
ServletConfig 를 이용하면
config.getInitParameter("~~");
와 같이 이름을 넘겨주고 값을 빼내어 사용 가능하다.

````java
ServletConfig config = this.getServletConfig();
````java

위와 같이 ServletConfig 인스턴스를 받아 올 수 도 있다.


````java
this.getInitParameter("tempDir");
````java

GenericServlet은 ServletConfig 인터페이스를 구현했기 때문에
GenericServlet을 상속받은 HttpServlet 은 위와 같이
this.getInitParameter();
메서드를 바로 사용 할 수 있다.




--------------------- 컨텍스트 초기화 파라미터 설정 ---------------------
<webapp>
	<context-param>
		<param-name>tempDir</param-name>
		<param-value>/temp</param-value>
	</context-param>
</wepapp>

서블릿 초기화 매개변수와 비슷하지만 다른점은
모든 서블릿에서 사용가능 하다는 점이다.

해당 매개변수를 빼서 사용하려면

````java
ServletContext context = this.getServletContext();
context.getInitParameter();
````java


위와 같이 사용하면 된다.
